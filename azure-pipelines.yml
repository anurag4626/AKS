# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
   - task: TerraformCLI@0
     inputs:
       command: 'init'
       workingDirectory: 'AKS'
       commandOptions: '-var "resourceGroup=$(resourceGroup)" -var "Name=$(Name)" -var "ClientID=$(ClientID)" -var "ClientSecret=$(ClientSecret)" -var "location=$(location)"'
       backendType: 'azurerm'
       backendServiceArm: 'Az-700 Training(1)(f87c07ef-aaac-4fdd-b6c9-64028d2dfa6f)'
       backendAzureRmSubscriptionId: 'f87c07ef-aaac-4fdd-b6c9-64028d2dfa6f'
       backendAzureRmResourceGroupName: 'RG'
       backendAzureRmStorageAccountName: 'storageaccount014626'
       backendAzureRmContainerName: 'container1'
       backendAzureRmKey: 'terraform.tfstate'
  
   - task: TerraformCLI@0
     inputs:
      command: 'apply'
      workingDirectory: 'AKS'
      environmentServiceName: 'Az-700 Training(1)(f87c07ef-aaac-4fdd-b6c9-64028d2dfa6f)'
      providerAzureRmSubscriptionId: 'f87c07ef-aaac-4fdd-b6c9-64028d2dfa6f'
      commandOptions: '-var "resourceGroup=$(resourceGroup)" -var "Name=$(Name)" -var "ClientID=$(ClientID)" -var "ClientSecret=$(ClientSecret)" -var "location=$(location)"'
      allowTelemetryCollection: false